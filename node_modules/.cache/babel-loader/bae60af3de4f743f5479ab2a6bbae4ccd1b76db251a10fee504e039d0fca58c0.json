{"ast":null,"code":"function clone(p) {\n  return [...p];\n}\nexport function curveToBezier(pointsIn, curveTightness = 0) {\n  const len = pointsIn.length;\n  if (len < 3) {\n    throw new Error('A curve must have at least three points.');\n  }\n  const out = [];\n  if (len === 3) {\n    out.push(clone(pointsIn[0]), clone(pointsIn[1]), clone(pointsIn[2]), clone(pointsIn[2]));\n  } else {\n    const points = [];\n    points.push(pointsIn[0], pointsIn[0]);\n    for (let i = 1; i < pointsIn.length; i++) {\n      points.push(pointsIn[i]);\n      if (i === pointsIn.length - 1) {\n        points.push(pointsIn[i]);\n      }\n    }\n    const b = [];\n    const s = 1 - curveTightness;\n    out.push(clone(points[0]));\n    for (let i = 1; i + 2 < points.length; i++) {\n      const cachedVertArray = points[i];\n      b[0] = [cachedVertArray[0], cachedVertArray[1]];\n      b[1] = [cachedVertArray[0] + (s * points[i + 1][0] - s * points[i - 1][0]) / 6, cachedVertArray[1] + (s * points[i + 1][1] - s * points[i - 1][1]) / 6];\n      b[2] = [points[i + 1][0] + (s * points[i][0] - s * points[i + 2][0]) / 6, points[i + 1][1] + (s * points[i][1] - s * points[i + 2][1]) / 6];\n      b[3] = [points[i + 1][0], points[i + 1][1]];\n      out.push(b[1], b[2], b[3]);\n    }\n  }\n  return out;\n}","map":{"version":3,"names":["clone","p","curveToBezier","pointsIn","curveTightness","len","length","Error","out","push","points","i","b","s","cachedVertArray"],"sources":["C:/Users/Ayush Hurkat/Documents/whiteboard-app/node_modules/points-on-curve/lib/curve-to-bezier.js"],"sourcesContent":["function clone(p) {\n    return [...p];\n}\nexport function curveToBezier(pointsIn, curveTightness = 0) {\n    const len = pointsIn.length;\n    if (len < 3) {\n        throw new Error('A curve must have at least three points.');\n    }\n    const out = [];\n    if (len === 3) {\n        out.push(clone(pointsIn[0]), clone(pointsIn[1]), clone(pointsIn[2]), clone(pointsIn[2]));\n    }\n    else {\n        const points = [];\n        points.push(pointsIn[0], pointsIn[0]);\n        for (let i = 1; i < pointsIn.length; i++) {\n            points.push(pointsIn[i]);\n            if (i === (pointsIn.length - 1)) {\n                points.push(pointsIn[i]);\n            }\n        }\n        const b = [];\n        const s = 1 - curveTightness;\n        out.push(clone(points[0]));\n        for (let i = 1; (i + 2) < points.length; i++) {\n            const cachedVertArray = points[i];\n            b[0] = [cachedVertArray[0], cachedVertArray[1]];\n            b[1] = [cachedVertArray[0] + (s * points[i + 1][0] - s * points[i - 1][0]) / 6, cachedVertArray[1] + (s * points[i + 1][1] - s * points[i - 1][1]) / 6];\n            b[2] = [points[i + 1][0] + (s * points[i][0] - s * points[i + 2][0]) / 6, points[i + 1][1] + (s * points[i][1] - s * points[i + 2][1]) / 6];\n            b[3] = [points[i + 1][0], points[i + 1][1]];\n            out.push(b[1], b[2], b[3]);\n        }\n    }\n    return out;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}