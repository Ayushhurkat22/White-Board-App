{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ayush Hurkat\\\\Documents\\\\whiteboard-app\\\\src\\\\Store\\\\BoardProvider.js\",\n  _s = $RefreshSig$();\nimport React, { useReducer } from 'react';\nimport { TOOL_ITEMS } from \"../constants\";\nimport BoardContext from './board-context';\nimport rough from 'roughjs/bin/rough';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst gen = rough.generator();\nconst boardReducer = (state, action) => {\n  switch (action.type) {\n    case \"CHANGE_TOOL\":\n      return {\n        ...state,\n        activeToolItem: action.payload.tool\n      };\n    case \"DRAW_DOWN\":\n      const newElement = {\n        id: state.elements.length,\n        x1: action.payload.clientX,\n        y1: action.payload.clientY,\n        x2: action.payload.clientX,\n        y2: action.payload.clientY,\n        roughEle: gen.line(action.payload.clientX, action.payload.clientY, action.payload.clientX, action.payload.clientY)\n      };\n      return {\n        ...state,\n        elements: [...state.elements, newElement] // Add new element to the array\n      };\n    case \"DRAW_MOVE\":\n      const updatedElements = state.elements.map((ele, index) => {\n        if (index === state.elements.length - 1) {\n          return {\n            ...ele,\n            x2: action.payload.clientX,\n            y2: action.payload.clientY,\n            roughEle: gen.line(ele.x1, ele.y1, action.payload.clientX, action.payload.clientY)\n          };\n        }\n        return ele;\n      });\n      return {\n        ...state,\n        elements: updatedElements\n      };\n    default:\n      return state;\n  }\n};\nconst initialBoardState = {\n  activeToolItem: TOOL_ITEMS.LINE,\n  elements: []\n};\nconst BoardProvider = ({\n  children\n}) => {\n  _s();\n  const [boardState, dispatchBoardAction] = useReducer(boardReducer, initialBoardState);\n  const changeToolHandler = tool => {\n    dispatchBoardAction({\n      type: \"CHANGE_TOOL\",\n      payload: {\n        tool\n      }\n    });\n  };\n  const boardMouseDownHandler = event => {\n    const {\n      clientX,\n      clientY\n    } = event;\n    dispatchBoardAction({\n      type: \"DRAW_DOWN\",\n      payload: {\n        clientX,\n        clientY\n      }\n    });\n  };\n  const boardMouseMoveHandler = event => {\n    const {\n      clientX,\n      clientY\n    } = event;\n    dispatchBoardAction({\n      type: \"DRAW_MOVE\",\n      payload: {\n        clientX,\n        clientY\n      }\n    });\n  };\n  const boardContextValue = {\n    activeToolItem: boardState.activeToolItem,\n    elements: boardState.elements,\n    toolActionType: changeToolHandler,\n    boardMouseDownHandler,\n    boardMouseMoveHandler\n  };\n  return /*#__PURE__*/_jsxDEV(BoardContext.Provider, {\n    value: boardContextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n_s(BoardProvider, \"VU1KcU1q+1Pr668qTf5tNlWSMOo=\");\n_c = BoardProvider;\nexport default BoardProvider;\nvar _c;\n$RefreshReg$(_c, \"BoardProvider\");","map":{"version":3,"names":["React","useReducer","TOOL_ITEMS","BoardContext","rough","jsxDEV","_jsxDEV","gen","generator","boardReducer","state","action","type","activeToolItem","payload","tool","newElement","id","elements","length","x1","clientX","y1","clientY","x2","y2","roughEle","line","updatedElements","map","ele","index","initialBoardState","LINE","BoardProvider","children","_s","boardState","dispatchBoardAction","changeToolHandler","boardMouseDownHandler","event","boardMouseMoveHandler","boardContextValue","toolActionType","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Ayush Hurkat/Documents/whiteboard-app/src/Store/BoardProvider.js"],"sourcesContent":["import React, { useReducer } from 'react';\r\nimport { TOOL_ITEMS } from \"../constants\";\r\nimport BoardContext from './board-context';\r\nimport rough from 'roughjs/bin/rough';\r\n\r\nconst gen = rough.generator();\r\n\r\nconst boardReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"CHANGE_TOOL\":\r\n      return {\r\n        ...state,\r\n        activeToolItem: action.payload.tool,\r\n      };\r\n    case \"DRAW_DOWN\":\r\n      const newElement = {\r\n        id: state.elements.length,\r\n        x1: action.payload.clientX,\r\n        y1: action.payload.clientY,\r\n        x2: action.payload.clientX,\r\n        y2: action.payload.clientY,\r\n        roughEle: gen.line(action.payload.clientX, action.payload.clientY, action.payload.clientX, action.payload.clientY),\r\n      };\r\n      return {\r\n        ...state,\r\n        elements: [...state.elements, newElement], // Add new element to the array\r\n      };\r\n    case \"DRAW_MOVE\":\r\n      const updatedElements = state.elements.map((ele, index) => {\r\n        if (index === state.elements.length - 1) {\r\n          return {\r\n            ...ele,\r\n            x2: action.payload.clientX,\r\n            y2: action.payload.clientY,\r\n            roughEle: gen.line(ele.x1, ele.y1, action.payload.clientX, action.payload.clientY),\r\n          };\r\n        }\r\n        return ele;\r\n      });\r\n      return {\r\n        ...state,\r\n        elements: updatedElements,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst initialBoardState = {\r\n  activeToolItem: TOOL_ITEMS.LINE,\r\n  elements: [],\r\n};\r\n\r\nconst BoardProvider = ({ children }) => {\r\n  const [boardState, dispatchBoardAction] = useReducer(boardReducer, initialBoardState);\r\n\r\n  const changeToolHandler = (tool) => {\r\n    dispatchBoardAction({\r\n      type: \"CHANGE_TOOL\",\r\n      payload: { tool },\r\n    });\r\n  };\r\n\r\n  const boardMouseDownHandler = (event) => {\r\n    const { clientX, clientY } = event;\r\n    dispatchBoardAction({\r\n      type: \"DRAW_DOWN\",\r\n      payload: { clientX, clientY },\r\n    });\r\n  };\r\n\r\n  const boardMouseMoveHandler = (event) => {\r\n    const { clientX, clientY } = event;\r\n    dispatchBoardAction({\r\n      type: \"DRAW_MOVE\",\r\n      payload: { clientX, clientY },\r\n    });\r\n  };\r\n\r\n  const boardContextValue = {\r\n    activeToolItem: boardState.activeToolItem,\r\n    elements: boardState.elements,\r\n    toolActionType: \r\n    changeToolHandler,\r\n    boardMouseDownHandler,\r\n    boardMouseMoveHandler,\r\n  };\r\n\r\n  return (\r\n    <BoardContext.Provider value={boardContextValue}>\r\n      {children}\r\n    </BoardContext.Provider>\r\n  );\r\n};\r\n\r\nexport default BoardProvider;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}