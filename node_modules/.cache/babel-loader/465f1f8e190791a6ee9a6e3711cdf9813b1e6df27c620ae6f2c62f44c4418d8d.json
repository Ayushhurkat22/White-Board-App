{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ayush Hurkat\\\\Documents\\\\whiteboard-app\\\\src\\\\store\\\\BoardProvider.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useReducer } from \"react\";\nimport boardContext from \"./board-context\";\nimport { BOARD_ACTIONS, TOOL_ACTION_TYPES, TOOL_ITEMS } from \"../constants\";\nimport { createElement, getSvgPathFromStroke, isPointNearElement } from \"../utils/element\";\nimport getStroke from \"perfect-freehand\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst boardReducer = (state, action) => {\n  switch (action.type) {\n    case BOARD_ACTIONS.CHANGE_TOOL:\n      {\n        return {\n          ...state,\n          activeToolItem: action.payload.tool\n        };\n      }\n    case BOARD_ACTIONS.CHANGE_ACTION_TYPE:\n      return {\n        ...state,\n        toolActionType: action.payload.actionType\n      };\n    case BOARD_ACTIONS.DRAW_DOWN:\n      {\n        const {\n          clientX,\n          clientY,\n          stroke,\n          fill,\n          size\n        } = action.payload;\n        const newElement = createElement(state.elements.length, clientX, clientY, clientX, clientY, {\n          type: state.activeToolItem,\n          stroke,\n          fill,\n          size\n        });\n        const prevElements = state.elements;\n        return {\n          ...state,\n          toolActionType: state.activeToolItem === TOOL_ITEMS.TEXT ? TOOL_ACTION_TYPES.WRITING : TOOL_ACTION_TYPES.DRAWING,\n          elements: [...prevElements, newElement]\n        };\n      }\n    case BOARD_ACTIONS.DRAW_MOVE:\n      {\n        const {\n          clientX,\n          clientY\n        } = action.payload;\n        const newElements = [...state.elements];\n        const index = state.elements.length - 1;\n        const {\n          type\n        } = newElements[index];\n        switch (type) {\n          case TOOL_ITEMS.LINE:\n          case TOOL_ITEMS.RECTANGLE:\n          case TOOL_ITEMS.CIRCLE:\n          case TOOL_ITEMS.ARROW:\n            const {\n              x1,\n              y1,\n              stroke,\n              fill,\n              size\n            } = newElements[index];\n            const newElement = createElement(index, x1, y1, clientX, clientY, {\n              type: state.activeToolItem,\n              stroke,\n              fill,\n              size\n            });\n            newElements[index] = newElement;\n            return {\n              ...state,\n              elements: newElements\n            };\n          case TOOL_ITEMS.BRUSH:\n            newElements[index].points = [...newElements[index].points, {\n              x: clientX,\n              y: clientY\n            }];\n            newElements[index].path = new Path2D(getSvgPathFromStroke(getStroke(newElements[index].points)));\n            return {\n              ...state,\n              elements: newElements\n            };\n          default:\n            throw new Error(\"Type not recognized\");\n        }\n      }\n    case BOARD_ACTIONS.DRAW_UP:\n      {\n        const elementsCopy = [...state.elements];\n        const newHistory = state.history.slice(0, state.index + 1);\n        newHistory.push(elementsCopy);\n        return {\n          ...state,\n          history: newHistory,\n          index: state.index + 1\n        };\n      }\n    case BOARD_ACTIONS.ERASE:\n      {\n        const {\n          clientX,\n          clientY\n        } = action.payload;\n        let newElements = [...state.elements];\n        newElements = newElements.filter(element => {\n          return !isPointNearElement(element, clientX, clientY);\n        });\n        const newHistory = state.history.slice(0, state.index + 1);\n        newHistory.push(newElements);\n        return {\n          ...state,\n          elements: newElements,\n          history: newHistory,\n          index: state.index + 1\n        };\n      }\n    case BOARD_ACTIONS.CHANGE_TEXT:\n      {\n        const index = state.elements.length - 1;\n        const newElements = [...state.elements];\n        newElements[index].text = action.payload.text;\n        const newHistory = state.history.slice(0, state.index + 1);\n        newHistory.push(newElements);\n        return {\n          ...state,\n          toolActionType: TOOL_ACTION_TYPES.NONE,\n          elements: newElements,\n          history: newHistory,\n          index: state.index + 1\n        };\n      }\n    case BOARD_ACTIONS.UNDO:\n      {\n        if (state.index <= 0) return state;\n        return {\n          ...state,\n          elements: state.history[state.index - 1],\n          index: state.index - 1\n        };\n      }\n    case BOARD_ACTIONS.REDO:\n      {\n        if (state.index >= state.history.length - 1) return state;\n        return {\n          ...state,\n          elements: state.history[state.index + 1],\n          index: state.index + 1\n        };\n      }\n    default:\n      return state;\n  }\n};\nconst initialBoardState = {\n  activeToolItem: TOOL_ITEMS.BRUSH,\n  toolActionType: TOOL_ACTION_TYPES.NONE,\n  elements: [],\n  history: [[]],\n  index: 0\n};\nconst BoardProvider = ({\n  children\n}) => {\n  _s();\n  const [boardState, dispatchBoardAction] = useReducer(boardReducer, initialBoardState);\n  const changeToolHandler = tool => {\n    dispatchBoardAction({\n      type: BOARD_ACTIONS.CHANGE_TOOL,\n      payload: {\n        tool\n      }\n    });\n  };\n  const boardMouseDownHandler = (event, toolboxState) => {\n    var _toolboxState$boardSt, _toolboxState$boardSt2, _toolboxState$boardSt3;\n    if (boardState.toolActionType === TOOL_ACTION_TYPES.WRITING) return;\n    const {\n      clientX,\n      clientY\n    } = event;\n    if (boardState.activeToolItem === TOOL_ITEMS.ERASER) {\n      dispatchBoardAction({\n        type: BOARD_ACTIONS.CHANGE_ACTION_TYPE,\n        payload: {\n          actionType: TOOL_ACTION_TYPES.ERASING\n        }\n      });\n      return;\n    }\n    dispatchBoardAction({\n      type: BOARD_ACTIONS.DRAW_DOWN,\n      payload: {\n        clientX,\n        clientY,\n        stroke: (_toolboxState$boardSt = toolboxState[boardState.activeToolItem]) === null || _toolboxState$boardSt === void 0 ? void 0 : _toolboxState$boardSt.stroke,\n        fill: (_toolboxState$boardSt2 = toolboxState[boardState.activeToolItem]) === null || _toolboxState$boardSt2 === void 0 ? void 0 : _toolboxState$boardSt2.fill,\n        size: (_toolboxState$boardSt3 = toolboxState[boardState.activeToolItem]) === null || _toolboxState$boardSt3 === void 0 ? void 0 : _toolboxState$boardSt3.size\n      }\n    });\n  };\n  const boardMouseMoveHandler = event => {\n    if (boardState.toolActionType === TOOL_ACTION_TYPES.WRITING) return;\n    const {\n      clientX,\n      clientY\n    } = event;\n    if (boardState.toolActionType === TOOL_ACTION_TYPES.DRAWING) {\n      dispatchBoardAction({\n        type: BOARD_ACTIONS.DRAW_MOVE,\n        payload: {\n          clientX,\n          clientY\n        }\n      });\n    } else if (boardState.toolActionType === TOOL_ACTION_TYPES.ERASING) {\n      dispatchBoardAction({\n        type: BOARD_ACTIONS.ERASE,\n        payload: {\n          clientX,\n          clientY\n        }\n      });\n    }\n  };\n  const boardMouseUpHandler = () => {\n    if (boardState.toolActionType === TOOL_ACTION_TYPES.WRITING) return;\n    if (boardState.toolActionType === TOOL_ACTION_TYPES.DRAWING) {\n      dispatchBoardAction({\n        type: BOARD_ACTIONS.DRAW_UP\n      });\n    }\n    dispatchBoardAction({\n      type: BOARD_ACTIONS.CHANGE_ACTION_TYPE,\n      payload: {\n        actionType: TOOL_ACTION_TYPES.NONE\n      }\n    });\n  };\n  const textAreaBlurHandler = text => {\n    dispatchBoardAction({\n      type: BOARD_ACTIONS.CHANGE_TEXT,\n      payload: {\n        text\n      }\n    });\n  };\n  const boardUndoHandler = useCallback(() => {\n    dispatchBoardAction({\n      type: BOARD_ACTIONS.UNDO\n    });\n  }, []);\n  const boardRedoHandler = useCallback(() => {\n    dispatchBoardAction({\n      type: BOARD_ACTIONS.REDO\n    });\n  }, []);\n  const boardContextValue = {\n    activeToolItem: boardState.activeToolItem,\n    elements: boardState.elements,\n    toolActionType: boardState.toolActionType,\n    changeToolHandler,\n    boardMouseDownHandler,\n    boardMouseMoveHandler,\n    boardMouseUpHandler,\n    textAreaBlurHandler,\n    undo: boardUndoHandler,\n    redo: boardRedoHandler\n  };\n  return /*#__PURE__*/_jsxDEV(boardContext.Provider, {\n    value: boardContextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 262,\n    columnNumber: 5\n  }, this);\n};\n_s(BoardProvider, \"1rP+IjmVtzqZ/xkNVHFw849k31o=\");\n_c = BoardProvider;\nexport default BoardProvider;\nvar _c;\n$RefreshReg$(_c, \"BoardProvider\");","map":{"version":3,"names":["React","useCallback","useReducer","boardContext","BOARD_ACTIONS","TOOL_ACTION_TYPES","TOOL_ITEMS","createElement","getSvgPathFromStroke","isPointNearElement","getStroke","jsxDEV","_jsxDEV","boardReducer","state","action","type","CHANGE_TOOL","activeToolItem","payload","tool","CHANGE_ACTION_TYPE","toolActionType","actionType","DRAW_DOWN","clientX","clientY","stroke","fill","size","newElement","elements","length","prevElements","TEXT","WRITING","DRAWING","DRAW_MOVE","newElements","index","LINE","RECTANGLE","CIRCLE","ARROW","x1","y1","BRUSH","points","x","y","path","Path2D","Error","DRAW_UP","elementsCopy","newHistory","history","slice","push","ERASE","filter","element","CHANGE_TEXT","text","NONE","UNDO","REDO","initialBoardState","BoardProvider","children","_s","boardState","dispatchBoardAction","changeToolHandler","boardMouseDownHandler","event","toolboxState","_toolboxState$boardSt","_toolboxState$boardSt2","_toolboxState$boardSt3","ERASER","ERASING","boardMouseMoveHandler","boardMouseUpHandler","textAreaBlurHandler","boardUndoHandler","boardRedoHandler","boardContextValue","undo","redo","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Ayush Hurkat/Documents/whiteboard-app/src/store/BoardProvider.js"],"sourcesContent":["import React, { useCallback, useReducer } from \"react\";\r\n\r\nimport boardContext from \"./board-context\";\r\nimport { BOARD_ACTIONS, TOOL_ACTION_TYPES, TOOL_ITEMS } from \"../constants\";\r\nimport {\r\n  createElement,\r\n  getSvgPathFromStroke,\r\n  isPointNearElement,\r\n} from \"../utils/element\";\r\nimport getStroke from \"perfect-freehand\";\r\n\r\nconst boardReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case BOARD_ACTIONS.CHANGE_TOOL: {\r\n      return {\r\n        ...state,\r\n        activeToolItem: action.payload.tool,\r\n      };\r\n    }\r\n    case BOARD_ACTIONS.CHANGE_ACTION_TYPE:\r\n      return {\r\n        ...state,\r\n        toolActionType: action.payload.actionType,\r\n      };\r\n    case BOARD_ACTIONS.DRAW_DOWN: {\r\n      const { clientX, clientY, stroke, fill, size } = action.payload;\r\n      const newElement = createElement(\r\n        state.elements.length,\r\n        clientX,\r\n        clientY,\r\n        clientX,\r\n        clientY,\r\n        { type: state.activeToolItem, stroke, fill, size }\r\n      );\r\n      const prevElements = state.elements;\r\n      return {\r\n        ...state,\r\n        toolActionType:\r\n          state.activeToolItem === TOOL_ITEMS.TEXT\r\n            ? TOOL_ACTION_TYPES.WRITING\r\n            : TOOL_ACTION_TYPES.DRAWING,\r\n        elements: [...prevElements, newElement],\r\n      };\r\n    }\r\n    case BOARD_ACTIONS.DRAW_MOVE: {\r\n      const { clientX, clientY } = action.payload;\r\n      const newElements = [...state.elements];\r\n      const index = state.elements.length - 1;\r\n      const { type } = newElements[index];\r\n      switch (type) {\r\n        case TOOL_ITEMS.LINE:\r\n        case TOOL_ITEMS.RECTANGLE:\r\n        case TOOL_ITEMS.CIRCLE:\r\n        case TOOL_ITEMS.ARROW:\r\n          const { x1, y1, stroke, fill, size } = newElements[index];\r\n          const newElement = createElement(index, x1, y1, clientX, clientY, {\r\n            type: state.activeToolItem,\r\n            stroke,\r\n            fill,\r\n            size,\r\n          });\r\n          newElements[index] = newElement;\r\n          return {\r\n            ...state,\r\n            elements: newElements,\r\n          };\r\n        case TOOL_ITEMS.BRUSH:\r\n          newElements[index].points = [\r\n            ...newElements[index].points,\r\n            { x: clientX, y: clientY },\r\n          ];\r\n          newElements[index].path = new Path2D(\r\n            getSvgPathFromStroke(getStroke(newElements[index].points))\r\n          );\r\n          return {\r\n            ...state,\r\n            elements: newElements,\r\n          };\r\n        default:\r\n          throw new Error(\"Type not recognized\");\r\n      }\r\n    }\r\n    case BOARD_ACTIONS.DRAW_UP: {\r\n      const elementsCopy = [...state.elements];\r\n      const newHistory = state.history.slice(0, state.index + 1);\r\n      newHistory.push(elementsCopy);\r\n      return {\r\n        ...state,\r\n        history: newHistory,\r\n        index: state.index + 1,\r\n      };\r\n    }\r\n    case BOARD_ACTIONS.ERASE: {\r\n      const { clientX, clientY } = action.payload;\r\n      let newElements = [...state.elements];\r\n      newElements = newElements.filter((element) => {\r\n        return !isPointNearElement(element, clientX, clientY);\r\n      });\r\n      const newHistory = state.history.slice(0, state.index + 1);\r\n      newHistory.push(newElements);\r\n      return {\r\n        ...state,\r\n        elements: newElements,\r\n        history: newHistory,\r\n        index: state.index + 1,\r\n      };\r\n    }\r\n    case BOARD_ACTIONS.CHANGE_TEXT: {\r\n      const index = state.elements.length - 1;\r\n      const newElements = [...state.elements];\r\n      newElements[index].text = action.payload.text;\r\n      const newHistory = state.history.slice(0, state.index + 1);\r\n      newHistory.push(newElements);\r\n      return {\r\n        ...state,\r\n        toolActionType: TOOL_ACTION_TYPES.NONE,\r\n        elements: newElements,\r\n        history: newHistory,\r\n        index: state.index + 1,\r\n      };\r\n    }\r\n    case BOARD_ACTIONS.UNDO: {\r\n      if (state.index <= 0) return state;\r\n      return {\r\n        ...state,\r\n        elements: state.history[state.index - 1],\r\n        index: state.index - 1,\r\n      };\r\n    }\r\n    case BOARD_ACTIONS.REDO: {\r\n      if (state.index >= state.history.length - 1) return state;\r\n      return {\r\n        ...state,\r\n        elements: state.history[state.index + 1],\r\n        index: state.index + 1,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst initialBoardState = {\r\n  activeToolItem: TOOL_ITEMS.BRUSH,\r\n  toolActionType: TOOL_ACTION_TYPES.NONE,\r\n  elements: [],\r\n  history: [[]],\r\n  index: 0,\r\n};\r\n\r\nconst BoardProvider = ({ children }) => {\r\n  const [boardState, dispatchBoardAction] = useReducer(\r\n    boardReducer,\r\n    initialBoardState\r\n  );\r\n\r\n  const changeToolHandler = (tool) => {\r\n    dispatchBoardAction({\r\n      type: BOARD_ACTIONS.CHANGE_TOOL,\r\n      payload: {\r\n        tool,\r\n      },\r\n    });\r\n  };\r\n\r\n  const boardMouseDownHandler = (event, toolboxState) => {\r\n    if (boardState.toolActionType === TOOL_ACTION_TYPES.WRITING) return;\r\n    const { clientX, clientY } = event;\r\n    if (boardState.activeToolItem === TOOL_ITEMS.ERASER) {\r\n      dispatchBoardAction({\r\n        type: BOARD_ACTIONS.CHANGE_ACTION_TYPE,\r\n        payload: {\r\n          actionType: TOOL_ACTION_TYPES.ERASING,\r\n        },\r\n      });\r\n      return;\r\n    }\r\n    dispatchBoardAction({\r\n      type: BOARD_ACTIONS.DRAW_DOWN,\r\n      payload: {\r\n        clientX,\r\n        clientY,\r\n        stroke: toolboxState[boardState.activeToolItem]?.stroke,\r\n        fill: toolboxState[boardState.activeToolItem]?.fill,\r\n        size: toolboxState[boardState.activeToolItem]?.size,\r\n      },\r\n    });\r\n  };\r\n\r\n  const boardMouseMoveHandler = (event) => {\r\n    if (boardState.toolActionType === TOOL_ACTION_TYPES.WRITING) return;\r\n    const { clientX, clientY } = event;\r\n    if (boardState.toolActionType === TOOL_ACTION_TYPES.DRAWING) {\r\n      dispatchBoardAction({\r\n        type: BOARD_ACTIONS.DRAW_MOVE,\r\n        payload: {\r\n          clientX,\r\n          clientY,\r\n        },\r\n      });\r\n    } else if (boardState.toolActionType === TOOL_ACTION_TYPES.ERASING) {\r\n      dispatchBoardAction({\r\n        type: BOARD_ACTIONS.ERASE,\r\n        payload: {\r\n          clientX,\r\n          clientY,\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  const boardMouseUpHandler = () => {\r\n    if (boardState.toolActionType === TOOL_ACTION_TYPES.WRITING) return;\r\n    if (boardState.toolActionType === TOOL_ACTION_TYPES.DRAWING) {\r\n      dispatchBoardAction({\r\n        type: BOARD_ACTIONS.DRAW_UP,\r\n      });\r\n    }\r\n    dispatchBoardAction({\r\n      type: BOARD_ACTIONS.CHANGE_ACTION_TYPE,\r\n      payload: {\r\n        actionType: TOOL_ACTION_TYPES.NONE,\r\n      },\r\n    });\r\n  };\r\n\r\n  const textAreaBlurHandler = (text) => {\r\n    dispatchBoardAction({\r\n      type: BOARD_ACTIONS.CHANGE_TEXT,\r\n      payload: {\r\n        text,\r\n      },\r\n    });\r\n  };\r\n\r\n  const boardUndoHandler = useCallback(() => {\r\n    dispatchBoardAction({\r\n      type: BOARD_ACTIONS.UNDO,\r\n    });\r\n  }, []);\r\n\r\n  const boardRedoHandler = useCallback(() => {\r\n    dispatchBoardAction({\r\n      type: BOARD_ACTIONS.REDO,\r\n    });\r\n  }, []);\r\n\r\n  const boardContextValue = {\r\n    activeToolItem: boardState.activeToolItem,\r\n    elements: boardState.elements,\r\n    toolActionType: boardState.toolActionType,\r\n    changeToolHandler,\r\n    boardMouseDownHandler,\r\n    boardMouseMoveHandler,\r\n    boardMouseUpHandler,\r\n    textAreaBlurHandler,\r\n    undo: boardUndoHandler,\r\n    redo: boardRedoHandler,\r\n  };\r\n\r\n  return (\r\n    <boardContext.Provider value={boardContextValue}>\r\n      {children}\r\n    </boardContext.Provider>\r\n  );\r\n};\r\n\r\nexport default BoardProvider;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}